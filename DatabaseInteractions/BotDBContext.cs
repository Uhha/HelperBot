// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DatabaseInteractions
{
    public partial class BotDBContext : DbContext
    {
        public BotDBContext()
            : base(InsertOptions())
        {
        }

        public BotDBContext(DbContextOptions<BotDBContext> options)
            : base(options)
        {
        }

        public static DbContextOptions<BotDBContext> InsertOptions()
        {
            DbContextOptionsBuilder<BotDBContext> ob = new DbContextOptionsBuilder<BotDBContext>();
            ob.UseSqlServer(Config.DBConnectionString, providerOptions => providerOptions.CommandTimeout(60))
                .UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);
            return ob.Options;
        }

        public virtual DbSet<Balance> Balances { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Enum> Enums { get; set; }
        public virtual DbSet<Subscription> Subscriptions { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Balance>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Shares).HasColumnType("decimal(19, 8)");

                entity.Property(e => e.Symbol)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Client>(entity =>
            {
                entity.Property(e => e.ChatId).HasColumnName("ChatID");

                entity.HasOne(d => d.SubscriptionNavigation)
                    .WithMany(p => p.Clients)
                    .HasForeignKey(d => d.Subscription)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Clients_Subscriptions");
            });

            modelBuilder.Entity<Enum>(entity =>
            {
                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.Name)
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}